dec_digit : "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
number_lit : dec_digit+
string_lit : "\"" (~"\"" any)* "\""
bool_lit : [ "true" | "false" ]
symbol : "::" | "->" | '#' | '[' | ']' | '(' | ')' | '{' | '}' | ',' | ';'

unary_op : "!" | "-"
binary_op : "+" | "-" | "*" | "/" | "%" | "==" | "<" | "<=" | ">" | ">=" | "!=" | "&&" | "||"

statements: statement+

statement:
    | simple_stmt ";"
    | compound_stmt

simple_stmt:
    | assignment
    | sum

assignment:
    NAME "=" expression

compound_stmt:
    | if_stmt
    | func_def

block: 
    | statement
    | "{" statements "}"

if_stmt:
    "if" "(" expression ")" block

func_def:
    "fn" NAME "(" arguments ")" block

expression:
    | expression "&&" expression
    | expression "||" expression
    | comparison

comparison:
    | comparison "==" comparison
    | comparison "!=" comparison
    | comparison ">" comparison
    | comparison ">=" comparison
    | comparison "<" comparison
    | comparison "<=" comparison
    | sum

sum:
    | sum "+" term
    | sum "-" term
    | term

term:
    | term "*" factor
    | term "/" factor
    | term "%" factor
    | factor

factor:
    | "!" factor
    | "-" factor
    power

power:
    | primary "**" factor
    | primary

primary:
    | primary "." identifier
    | primary ( arguments )
    | atom

atom:
    | identifier
    | bool_lit
    | string_lit
    | number_lit
    | group

group:
    | "(" expression ")"

// useful reference: https://docs.python.org/3/reference/grammar.html