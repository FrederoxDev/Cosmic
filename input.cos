struct V3 { x: Number, y: Number, z: Number }

impl V3 {
    fn From(x: Number, y: Number, z: Number) {
        return V3 {x: x, y: y, z: z};
    }

    fn Inspect(self: V3) {
        log("{ x:", self.x, ", y:", self.y, ", z:", self.z, "}");
    }

    fn Add(self: V3, other: V3) {
        return V3 {
            x: self.x + other.x,
            y: self.y + other.y,
            z: self.z + other.z
        };
    }
}

let vec1 = V3 {x: 10, y: 12, z: 3};
let vec2 = V3::From(1, 2, 4);

let combined = vec1 + vec2;
V3::Inspect(combined);